datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id            String          @id @default(cuid())
  name          String?
  email         String          @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  dateOfBirth   DateTime?
  password      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  QuizResult QuizResult[]
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?  
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}


model Quiz {
  id            Int          @id @default(autoincrement())
  question      String
  answerA       String
  answerB       String
  answerC       String
  answerD       String
  answerE       String
  userAnswer    String?
  correctAnswer String
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  QuizResult    QuizResult[]
}

model QuizResult {
  id        Int      @id @default(autoincrement())
  userId    String
  quizId    Int
  score     Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  quiz Quiz @relation(fields: [quizId], references: [id], onDelete: Cascade)
}
